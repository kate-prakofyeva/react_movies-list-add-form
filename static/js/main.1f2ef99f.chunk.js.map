{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","concat","required","onChange","id","useState","Math","random","toFixed","slice","touched","setTouched","hasError","htmlFor","type","classNames","event","target","onBlur","defaultStateofMovie","NewMovie","onAdd","count","setCount","newMovie","setNewMovie","handleChange","key","disableSubmit","trim","onSubmit","preventDefault","prevState","disabled","App","setMovies","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"stEAQO,MAAMA,EAA6BC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAClDE,eAAA,OAAKC,UAAU,OAAO,UAAQ,aAAYC,SAAA,CACxCC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,UAAQF,UAAU,gBAAeC,SAC/BC,cAAA,OACEC,IAAKL,EAAMM,OACXC,IAAI,kBAIVN,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BF,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,UAAQF,UAAU,iBAAgBC,SAChCC,cAAA,OACEC,IAAI,wBACJE,IAAI,aAIVH,cAAA,OAAKF,UAAU,gBAAeC,SAC5BC,cAAA,KAAGF,UAAU,aAAYC,SAAEH,EAAMQ,aAIrCP,eAAA,OAAKC,UAAU,UAASC,SAAA,CACrBH,EAAMS,YACPL,cAAA,SACAA,cAAA,KAAGM,KAAMV,EAAMW,QAAQR,SAAC,iBAGxB,EC7BKS,EAA8Bb,IAAA,IAAC,OAAEc,GAAQd,EAAA,OACpDK,cAAA,OAAKF,UAAU,SAAQC,SACpBU,EAAOC,KAAId,GACVI,cAACN,EAAS,CAERE,MAAOA,GADFA,EAAMe,WAIX,E,oBCAD,MAAMC,EAA6BjB,IAOnC,IAPoC,KACzCkB,EAAI,MACJC,EAAK,MACLC,EAAQF,EAAI,YACZG,EAAW,SAAAC,OAAYF,GAAO,SAC9BG,GAAW,EAAK,SAChBC,EAAWA,UACZxB,EAEC,MAAOyB,GAAMC,oBAAS,OAAAJ,OAASJ,EAAI,KAAAI,OAd5BK,KAAKC,SACTC,QAAQ,IACRC,MAAM,OAeFC,EAASC,GAAcN,oBAAS,GACjCO,EAAWF,GAAWR,IAAaJ,EAEzC,OACEjB,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,SAAOF,UAAU,QAAQ+B,QAAST,EAAGrB,SAClCgB,IAGHf,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,SACE8B,KAAK,OACLV,GAAIA,EACJ,mBAAAH,OAAkBJ,GAClBf,UAAWiC,IAAW,QAAS,CAC7B,YAAaH,IAEfZ,YAAaA,EACbF,MAAOA,EACPK,SAAUa,GAASb,EAASa,EAAMC,OAAOnB,OACzCoB,OAAQA,IAAMP,GAAW,OAI5BC,GACC5B,cAAA,KAAGF,UAAU,iBAAgBC,SAAA,GAAAkB,OAAKF,EAAK,oBAErC,ECjDJoB,EAAsB,CAC1B/B,MAAO,GACPC,YAAa,GACbH,OAAQ,GACRK,QAAS,GACTI,OAAQ,IAGGyB,EAAWzC,IAAuB,IAAtB,MAAE0C,GAAc1C,EAGvC,MAAO2C,EAAOC,GAAYlB,mBAAS,IAC5BmB,EAAUC,GAAepB,mBAAgBc,GAM1CO,EAAgBC,GAAiB7B,IACrC2B,EAAY,IACPD,EACH,CAACG,GAAM7B,GACP,GAWE,MACJV,EAAK,YAAEC,EAAW,OAAEH,EAAM,QAAEK,EAAO,OAAEI,GACnC6B,EAEEI,GAAiBxC,EAAMyC,SACzB3C,EAAO2C,SACPtC,EAAQsC,SACRlC,EAAOkC,OAEX,OACEhD,eAAA,QAAMC,UAAU,WAAuBgD,SAlBnBd,IACpBA,EAAMe,iBAENR,GAASS,GAAaA,EAAY,IAClCX,EAAMG,GAdNC,EAAYN,EAeL,EAauDpC,SAAA,CAC5DC,cAAA,MAAIF,UAAU,QAAOC,SAAC,gBAEtBC,cAACY,EAAS,CACRC,KAAK,QACLE,MAAM,QACND,MAAOV,EACPe,SAAUuB,EAAa,SACvBxB,UAAQ,IAGVlB,cAACY,EAAS,CACRC,KAAK,cACLE,MAAM,cACND,MAAOT,EACPc,SAAUuB,EAAa,iBAGzB1C,cAACY,EAAS,CACRC,KAAK,SACLE,MAAM,YACND,MAAOZ,EACPiB,SAAUuB,EAAa,UACvBxB,UAAQ,IAGVlB,cAACY,EAAS,CACRC,KAAK,UACLE,MAAM,WACND,MAAOP,EACPY,SAAUuB,EAAa,WACvBxB,UAAQ,IAGVlB,cAACY,EAAS,CACRC,KAAK,SACLE,MAAM,UACND,MAAOH,EACPQ,SAAUuB,EAAa,UACvBxB,UAAQ,IAGVlB,cAAA,OAAKF,UAAU,mBAAkBC,SAC/BC,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,UACE8B,KAAK,SACL,UAAQ,gBACRhC,UAAU,iBACVmD,SAAUL,EAAc7C,SACzB,cAjDyBuC,EAsDzB,E,WClGJ,MAAMY,EAAMA,KACjB,MAAOzC,EAAQ0C,GAAa9B,mBAAkB+B,GAM9C,OACEvD,eAAA,OAAKC,UAAU,OAAMC,SAAA,CACnBC,cAAA,OAAKF,UAAU,eAAcC,SAC3BC,cAACQ,EAAU,CAACC,OAAQA,MAEtBT,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAACoC,EAAQ,CAACC,MAVIG,IAClBW,GAAUH,GAAa,IAAIA,EAAWR,IAAU,QAW1C,EClBVa,IAASC,OAAOtD,cAACkD,EAAG,IAAKK,SAASC,eAAe,Q","file":"static/js/main.1f2ef99f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { FormEvent, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void,\n};\n\nconst defaultStateofMovie = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport const NewMovie = ({ onAdd }: Props) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, setCount] = useState(0);\n  const [newMovie, setNewMovie] = useState<Movie>(defaultStateofMovie);\n\n  const reset = () => {\n    setNewMovie(defaultStateofMovie);\n  };\n\n  const handleChange = (key: string) => (value: string) => {\n    setNewMovie({\n      ...newMovie,\n      [key]: value,\n    });\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setCount(prevState => prevState + 1);\n    onAdd(newMovie);\n    reset();\n  };\n\n  const {\n    title, description, imgUrl, imdbUrl, imdbId,\n  } = newMovie;\n\n  const disableSubmit = !title.trim()\n  || !imgUrl.trim()\n  || !imdbUrl.trim()\n  || !imdbId.trim();\n\n  return (\n    <form className=\"NewMovie\" key={count} onSubmit={handleSubmit}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={handleChange('title')}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={handleChange('description')}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={handleChange('imgUrl')}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={handleChange('imdbUrl')}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={handleChange('imdbId')}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={disableSubmit}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const onAddMovie = (newMovie:Movie) => {\n    setMovies(prevState => [...prevState, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}